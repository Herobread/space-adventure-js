"misc": {
        "logo": {
            "img": "   _____                       ___       __                 __        \n  / ___/____  ____ _________  /   | ____/ /   _____  ____  / /___  __________        \n  \\__ \\/ __ \\/ __ `/ ___/ _ \\/ /| |/ __  / | / / _ \\/ __ \\/ __/ / / / ___/ _ \\\n ___/ / /_/ / /_/ / /__/  __/ ___ / /_/ /| |/ /  __/ / / / /_/ /_/ / /  /  __/       \n/____/ .___/\\__,_/\\___/\\___/_/  |_\\__,_/ |___/\\___/_/ /_/\\__/\\__,_/_/   \\___/\n    /_/",
            "width": 85
        }
    },
    "main": {
        "ship": "a"
    }




bool candiesThrownGotChocolateBar=true, bool candyBoxBoxOpened=false, bool castleKilledNougatMonster=true, bool castleBigRoomHovenHappy=true, bool castleRoom2LitFire=true, bool castleRoom2TookObject=true, bool castleTowerFirstVisitDone=true, bool castleTowerPStoneDone=true, bool castleTowerLStoneDone=false, bool castleTowerAStoneDone=true, bool castleTowerYStoneDone=false, bool castleTowerTookTalkingCandy=false, bool cellarDone=true, bool dragonDone=true, bool dragonUnlockedCyclops=true, bool forgeFoundLollipop=true, bool forgeBoughtWoodenSword=true, bool forgeBoughtIronAxe=true, bool forgeBoughtPolishedSilverSword=true, bool forgeBoughtLightweightBodyArmour=true, bool forgeBoughtScythe=false, bool fortressRoom1ChestFound=false, bool fortressRoom3ChestFound=false, bool fourthHouseFoundLollipopOnCupboard=true, bool gameDebug=false, bool gameInvertedColors=true, bool lighthousePuzzleDone=false, bool lollipopFarmPlant1LollipopButtonUnlocked=true, bool lollipopFarmPlant10LollipopsButtonUnlocked=true, bool lollipopFarmPlant100LollipopsButtonUnlocked=true, bool lollipopFarmPlant1000LollipopsButtonUnlocked=true, bool lollipopFarmIsProductionEachSecond=true, bool lollipopFarmConstructMillButtonUnlocked=true, bool lollipopFarmMillConstructed=true, bool lollipopFarmDigPondButtonUnlocked=true, bool lollipopFarmPondDug=true, bool lollipopFarmPondFeedingLolligators=false, bool lonelyHouseOpenBoxDone=true, bool lonelyHouseShakeBoxDone=true, bool lonelyHouseBreakLockDone=true, bool lonelyHouseKickBoxDone=true, bool lonelyHouseAskTheBoxToOpenItselfDone=true, bool lonelyHouseLureTheBoxWithACandyDone=true, bool lonelyHouseTakeTheBoxDone=true, bool mainMapDoneDesert=true, bool mainMapDoneBridge=true, bool mainMapDoneCaveEntrance=true, bool mainMapDonePier=true, bool mainMapDoneForest=true, bool mainMapDoneCastleEntrance=true, bool questPlayerSpellHealthPotionHasSpell=false, bool questPlayerSpellTurtlePotionHasSpell=false, bool questPlayerSpellAntiGravityPotionHasSpell=false, bool questPlayerSpellBerserkPotionHasSpell=false, bool questPlayerSpellCloningPotionHasSpell=false, bool questPlayerSpellPPotionHasSpell=false, bool questPlayerSpellXPotionHasSpell=false, bool secondHouseLollipop1Bought=true, bool secondHouseLollipop2Bought=true, bool secondHouseLollipop3Bought=true, bool secondHouseLeatherBootsBought=false, bool secondHouseChocolateBarBought=true, bool secondHouseMerchantHatBought=false, bool secondHouseTimeRingBought=true, bool sorceressHutTookLollipop=true, bool sorceressHutBoughtGrimoire=true, bool sorceressHutBoughtGrimoire2=true, bool sorceressHutBoughtCauldron=true, bool sorceressHutBoughtHat=false, bool statusBarUnlocked=true, bool statusBarUnlockedCfg=true, bool statusBarUnlockedSave=true, bool statusBarUnlockedMap=true, bool statusBarUnlockedInventory=true, bool statusBarUnlockedLollipopFarm=true, bool statusBarUnlockedCauldron=true, bool statusBarUnlockedInsideYourBox=false, bool statusBarUnlockedTheComputer=false, bool statusBarUnlockedTheArena=false, bool statusBarUnlockedHealthBar=true, bool SuperRPGReward1=false, bool SuperRPGReward2=false, bool SuperRPGReward3=false, bool SuperRPGReward4=false, bool SuperRPGUnlockedHardmode=false, bool TheCavePattern_ChocolateBarNowGotTheBar=true, bool TheCavePattern_TreasureMapSawMap=true, bool TheCavePattern_TreasureMapFoundTreasure=true, bool theHoleFirstChestFound=true, bool theHoleSecondChestFound=false, bool theHoleThirdChestFound=true, bool theHoleFourthChestFound=true, bool wishingWellFirstCandyThrown=true, bool wishingWellFirstLollipopThrown=true, bool wishingWellWeAreEnchanting=false, bool wishingWellWeArePainAuChocolating=false, bool gridItemPossessedMainMap=true, bool gridItemPossessedTimeRing=true, bool gridItemPossessedThirdHouseKey=true, bool gridItemPossessedBeginnersGrimoire=true, bool gridItemPossessedFeather=true, bool gridItemPossessedPogoStick=true, bool gridItemPossessedHeartPlug=true, bool gridItemPossessedAdvancedGrimoire=true, bool gridItemPossessedSponge=true, bool gridItemPossessedShellPowder=true, bool gridItemPossessedRedSharkFin=false, bool gridItemPossessedBlackMagicGrimoire=true, bool gridItemPossessedGreenSharkFin=true, bool gridItemPossessedPurpleSharkFin=false, bool gridItemPossessedHeartPendant=true, bool gridItemPossessedFortressKey=false, bool gridItemPossessedUnicornHorn=false, bool gridItemPossessedXinopherydonClaw=false, bool gridItemPossessedPitchfork=true, bool gridItemPossessedTalkingCandy=false, bool gridItemPossessedP=true, bool gridItemPossessedL=false, bool gridItemPossessedA=true, bool gridItemPossessedY=false, bool eqItemWeaponWoodenSword=true, bool eqItemWeaponIronAxe=true, bool eqItemWeaponPolishedSilverSword=true, bool eqItemWeaponTrollBludgeon=true, bool eqItemWeaponMonkeyWizardStaff=false, bool eqItemWeaponEnchantedMonkeyWizardStaff=false, bool eqItemWeaponTribalSpear=true, bool eqItemWeaponSummoningTribalSpear=false, bool eqItemWeaponGiantSpoon=false, bool eqItemWeaponScythe=false, bool eqItemWeaponGiantSpoonOfDoom=false, bool eqItemHatOctopusKingCrown=false, bool eqItemHatOctopusKingCrownWithJaspers=true, bool eqItemHatOctopusKingCrownWithObsidian=false, bool eqItemHatMerchantHat=false, bool eqItemHatSorceressHat=false, bool eqItemBodyArmoursLightweightBodyArmour=true, bool eqItemBodyArmoursKnightBodyArmour=false, bool eqItemBodyArmoursEnchantedKnightBodyArmour=true, bool eqItemGlovesLeatherGloves=false, bool eqItemGlovesRedEnchantedGloves=true, bool eqItemGlovesPinkEnchantedGloves=true, bool eqItemBootsLeatherBoots=true, bool eqItemBootsRocketBoots=false, bool eqItemBootsBootsOfIntrospection=false, number aTreeStep=9, number cauldronBookCurrentPage=0, number fourthHouseCupboardStep=2, number fourthHouseCarpetStep=2, number galacticWarsBestScore=0, number gameSecondsElapsedSinceLastLollipopsProduction=0, number gameCandiesAccumulated=2948910, number gameCandiesCurrent=95637, number gameCandiesMax=2555201, number gameLollipopsAccumulated=5564568, number gameLollipopsCurrent=2637711, number gameLollipopsMax=2637711, number gameChocolateBarsAccumulated=13, number gameChocolateBarsCurrent=0, number gameChocolateBarsMax=9, number gamePainsAuChocolatAccumulated=9, number gamePainsAuChocolatCurrent=0, number gamePainsAuChocolatMax=5, number gameCandiesEatenAccumulated=2596481, number gameCandiesEatenCurrent=2596481, number gameCandiesEatenMax=2596481, number gameCandiesThrownAccumulated=3190, number gameCandiesThrownCurrent=3190, number gameCandiesThrownMax=3190, number gameCandiesUsedToRequestFeaturesAccumulated=55, number gameCandiesUsedToRequestFeaturesCurrent=55, number gameCandiesUsedToRequestFeaturesMax=55, number gameCandiesInCauldronAccumulated=14, number gameCandiesInCauldronCurrent=1, number gameCandiesInCauldronMax=13, number gameLollipopsInCauldronAccumulated=40000, number gameLollipopsInCauldronCurrent=20000, number gameLollipopsInCauldronMax=20000, number gameGiftPower=0, number gameGiftHealth=3, number gameGiftMagic=6, number lollipopFarmLollipopsPlanted=57545, number lollipopFarmTimeSinceLastProduction=0, number lollipopFarmProduction=4500, number lollipopFarmPondHowManyLolligators=26, number lollipopFarmPondConversionRate=996, number lollipopFarmPreviousCandiesProduction=8, number lollipopFarmCurrentCandiesProduction=13, number mainMapDefaultScroll=450.3999938964844, number playerHp=2400, number questPlayerSpellHealthPotionQuantity=0, number questPlayerSpellAntiGravityPotionQuantity=0, number questPlayerSpellTurtlePotionQuantity=0, number questPlayerSpellBerserkPotionQuantity=0, number questPlayerSpellCloningPotionQuantity=0, number questPlayerSpellPPotionQuantity=0, number questPlayerSpellXPotionQuantity=0, number statusBarCornerStep=0, number wishingWellPreviousCandyWishPrice=86464, number wishingWellCurrentCandyWishPrice=236224, number wishingWellCurrentLollipopWishPrice=10000000, number wishingWellHowManyChocolateBarsThrown=4, number wishingWellHowManyPainsAuChocolatThrown=9, string gameLanguage=en, string gameWeaponSelected=eqItemWeaponTrollBludgeon, string gameHatSelected=eqItemHatOctopusKingCrownWithJaspers, string gameBodyArmourSelected=eqItemBodyArmoursEnchantedKnightBodyArmour, string gameGlovesSelected=eqItemGlovesPinkEnchantedGloves, string gameBootsSelected=eqItemBootsLeatherBoots, string gameGameMode=normal


	






void fileIcon(int X, int Y)
{
	texture[0] = "####";
	texture[1] = "%   #";
	texture[2] = "%    #";
	texture[3] = "%    #";
	texture[4] = "%    #";
	texture[5] = "%%%%%%";
	drawTexture(X, Y, 6);
}

void ship(int X, int Y)
{
	const int n = 5;
	texture[0] = "<\\__";
	texture[1] = " \\  \\";
	texture[2] = "<= 0 |-";
	texture[3] = " /__/";
	texture[4] = "</";

	drawTexture(X, Y, n);
}

void shipExplosion(int X, int Y, int pos)
{
	int n = 0;
	if (pos == 0)
	{
		texture[0] = " ";
		texture[1] = "#\\_#";
		texture[2] = " \\  \\";
		texture[3] = "<= 0 |-";
		texture[4] = " #__#";
		texture[5] = "</ #";
		n = 6;
	}
	if (pos == 1)
	{
		texture[0] = " #  #";
		texture[1] = "# ## #";
		texture[2] = " # ##\\";
		texture[3] = " <# # |-";
		texture[4] = " # # #";
		texture[5] = " <# #";
		n = 6;
	}
	if (pos == 2)
	{
		texture[0] = "  # ##";
		texture[1] = " # #  #";
		texture[2] = "#   #  #";
		texture[3] = " #  % #";
		texture[4] = "  #  #";
		texture[5] = " #     #";
		texture[6] = "  # # #";
		n = 7;
	}
	if (pos == 3)
	{
		texture[0] = "  # %";
		texture[1] = " % #  #";
		texture[2] = "#   #  #";
		texture[3] = " %  = #";
		texture[4] = "  #  %";
		texture[5] = " %     %";
		texture[6] = "  % # #";
		n = 7;
	}
	if (pos == 4)
	{
		texture[0] = "  = =";
		texture[1] = " % %  %";
		texture[2] = "#   #  %";
		texture[3] = " =  + %";
		texture[4] = "  #  %";
		texture[5] = " %     =";
		texture[6] = "  = # =";
		n = 7;
	}
	if (pos == 5)
	{
		texture[0] = "  + +";
		texture[1] = " % %  %";
		texture[2] = "%   %  =";
		texture[3] = " +    =";
		texture[4] = "  %  %";
		texture[5] = " =     =";
		texture[6] = "  + % +";
		n = 7;
	}
	if (pos == 6)
	{
		texture[0] = " ";
		texture[1] = "   +";
		texture[2] = "=   =  +";
		texture[3] = " ";
		texture[4] = "  =  =";
		texture[5] = " +     +";
		texture[6] = "    =";
		n = 7;
	}
	if (pos == 7)
	{
		texture[0] = " ";
		texture[1] = " ";
		texture[2] = "+   +";
		texture[3] = " ";
		texture[4] = " ";
		texture[5] = " ";
		texture[6] = "    +";
		n = 7;
	}
	if (pos == 8)
	{
		texture[0] = " ";
		texture[1] = " ";
		texture[2] = " ";
		texture[3] = " ";
		texture[4] = " ";
		texture[5] = " ";
		texture[6] = " ";
		n = 7;
	}

	drawTexture(X, Y, n);
}

void asteroid(int X, int Y, int type)
{
	int n = 0;

	if (type == 0)
	{
		n = 6;
		texture[0] = "_/\\";
		texture[1] = "\\. |";
		texture[2] = "|  .\\";
		texture[3] = "[    >";
		texture[4] = "|  _/";
		texture[5] = " \\/";
	}
	else if (type == 1)
	{
		n = 4;
		texture[0] = "  _";
		texture[1] = " /.\\";
		texture[2] = "|  .|";
		texture[3] = " \\_/";
	}
	else if (type == 2)
	{
		n = 5;
		texture[0] = " ___";
		texture[1] = "/ . \\";
		texture[2] = "|   .\\";
		texture[3] = " \\_  |";
		texture[4] = "   \\/";
	}
	else if (type == 3)
	{
		n = 6;
		texture[0] = "   _";
		texture[1] = "  /.\\";
		texture[2] = " /  .|";
		texture[3] = "|    |";
		texture[4] = "|   /";
		texture[5] = " \\_/";
	}
	else if (type == 4)
	{
		n = 5;
		texture[0] = "  _";
		texture[1] = " /.\\";
		texture[2] = "|  .|";
		texture[3] = "|  /";
		texture[4] = " \\/";
	}
	else if (type == 5)
	{
		n = 5;
		texture[0] = " /\\";
		texture[1] = "| .|";
		texture[2] = "|  .\\";
		texture[3] = "|  _/";
		texture[4] = " \\/";
	}

	drawTexture(X, Y, n);
}

void ufo(int X, int Y, int type)
{
	int n = 0;
	if (type == 0)
	{
		n = 3;
		texture[0] = "  _=_";
		texture[1] = "-=___=-";
		texture[2] = " / | \\";
	}
	else if (type == 1)
	{
		n = 4;
		texture[0] = "   .-.";
		texture[1] = "  _|_|_";
		texture[2] = "-=_   _=-";
		texture[3] = "   \\_/";
	}

	drawTexture(X, Y, n);
}

void ufoExplosion(int X, int Y, int num)
{
	int n = 0;
	if (num == 0)
	{
		texture[0] = "   .-.";
		texture[1] = "  _#_|_";
		texture[2] = "-=_   #=-";
		texture[3] = "   #_/";
		n = 4;
	}
	if (num == 1)
	{
		texture[0] = "   #-.";
		texture[1] = "  #%#|#";
		texture[2] = "-=_# #%#-";
		texture[3] = "  #%#/#";
		texture[4] = "   #";
		n = 5;
	}
	if (num == 2)
	{
		texture[0] = "   %-%";
		texture[1] = "  % %|%";
		texture[2] = "-%_  % %-";
		texture[3] = "  % %/%";
		texture[4] = "   %";
		n = 5;
	}
	if (num == 3)
	{
		texture[0] = "   =-=";
		texture[1] = "  = =%=";
		texture[2] = "-=%  = =";
		texture[3] = "  = =%=";
		texture[4] = "   =";
		n = 5;
	}
	if (num == 4)
	{
		texture[0] = "  +-+";
		texture[1] = " + +=+";
		texture[2] = "+=  + +";
		texture[3] = " + +=+";
		texture[4] = "  +";
		n = 5;
	}
	if (num == 5)
	{
		texture[0] = " +";
		texture[1] = "   +";
		texture[2] = "+    +";
		texture[3] = "   +";
		int n = 4;
	}
	if (num == 6)
	{
		texture[0] = " +";
		texture[1] = " ";
		texture[2] = "+";
		texture[3] = "   +";
		int n = 4;
	}

	drawTexture(X, Y, n);
}

void moon(int X, int Y)
{
	int n = 16;
         ____
     _---    ---_
   _/    o      o-_
  /   _        /|  \\
 |   / \\   /\\ .     |
 |  |   |. \\/. .    |
|   .\\_/  ()         |
|         . () _  () |
| |         . / \\    |
| *-  |      |   |   |
|      \\|    /\\_/    |
 |     -*--  \\/     |
 |     /|       *   |
  \\_           <> _/
    -__        __-
       --____--

	drawTexture(X, Y, n);
}

void mars(int X, int Y)
{
	int n = 21;
          ___---___
       _--        _--_
    _--      ___--    --_
   /---___---      _     \\
  /      _        / \\     \\
 | |    / \\      |   | .   |
 |     /_/      /\\\\_/      |
 |     /        \\/         |
|            .              |
|           .               |
|                           |
|____                       |
|    ----||__      ____     |
 |           ----_/    \\__ |
 |-_                      -|
 | _-  _--_                |
  \\     --       ______   /
   \\_       __---      -_/
     --  _--          --
       ---___   ___---
             ---

	drawTexture(X, Y, n);
}

void jupiter(int X, int Y)
{
         __-------__
      __-            -_
    _-            -    -_
   /      -*-  - .-      \\
  /                       \\
 | - - -   -  ---    --  - |
 |              .    .     |
 |=--==-==-=----==--==-=---|
|                           |
|  -- -  -  -  -    -    -  |
|               .           |
|--===--==--=--===--=-=-=-==|
|                           |
 |-=__              _--_   |
 |    --=---===--==-_ 0_-==|
 |                   --    |
  \\   -   -  -   - -o o- -/
   \\                     /
    --_               _--
       --__       __--
           -------
int n = 22;
	drawTexture(X, Y, n);
}

void uran(int X, int Y) // Uran
{
         __-------__
      __-           -_
    _-                 -_
   /                     \\
  /                       \\
 |                         |
 |                         |
 |                         |
|                           |
|                           |
|                           |
|                           |
|                           |
 |                         |
 |                         |
 |                         |
  \\                       /
   \\                     /
    --_               _--
       --__       __--
           -------
	int n = 21;
	drawTexture(X, Y, n);
}

void saturn(int X, int Y)
{
                               ...
                            .......
               __-------__ ....  ..
            __-           -_.    .
          _-       / /       -_.. .
         /         /  /       .\\ .
        /      / /       /  ... \\
       |          / /      . .   |
       |   // /   /    .. .      |
       |  /           .. ....    |
      |  //         . . .  .      |
      |  /        .... .          |
      |  /         .  .        /  |
      |         . . .       / /   |
     .|       .  . .       /   /  |
   ..  |    . .. ..      / //    |
   ..  |   . ..          /       |
  ..   | .. ..     /    /  /     |
 . .   .\\  .         /  /       /
.   . .  \\.   /   /    /       /
..   .....--_   / / /       _--
   .. ..     --__       __--
                 -------
	int n = 23;
	drawTexture(X, Y, n);
}

void neptune(int X, int Y)
{
 
         __-------__
      __-           -_
    _-     _ _-        -_
   /   ---- -            \\
  /                       \\
 |                         |
 |          =-             |
 |                         |
|              __           |
|             _\\_\\__        |
|              -     --     |
|                           |
|            .              |
 |  =                      |
 |                         |
 |                         |
  \\ o                     /
   \\     __---------___  /
    --_--     __      _--
       --__       __--
           -------
	drawTexture(X, Y, 22);
}

void pluto(int X, int Y)
{
	texture[0] = "   __---__";
	texture[1] = "  /    .  \\";
	texture[2] = " | . . . . |";
	texture[3] = "|  . .  :  :|";
	texture[4] = "| . . .__: _|";
	texture[5] = "|  .. /  \\/ |";
	texture[6] = " |. . |    |";
	texture[7] = "  \\__/  __/";
	texture[8] = "     ---";
	drawTexture(X, Y, 9);
}

void voyager(int X, int Y)
{
	texture[0] = " o_";
	texture[1] = "  \\|";
	texture[2] = "   | /|";
	texture[3] = "  <|| |";
	texture[4] = "  /| \\|";
	texture[5] = " / |";
	texture[6] = "/";

	drawTexture(X, Y, 7);
}


void asteroidExplosion(int X, int Y, int type, int pos)
{
	int n = 0;
	if (type == 0 || type == 4 || type == 5)
	{
		if (pos == 0)
		{
			texture[0] = "_/\\";
			texture[1] = "\\# |";
			texture[2] = "|   #";
			texture[3] = "[    >";
			texture[4] = "|# #/";
			texture[5] = " \\/";
			n = 6;
		}
		if (pos == 1)
		{
			texture[0] = "_#\\";
			texture[1] = "# #|#";
			texture[2] = "|# # #";
			texture[3] = "[# ##>";
			texture[4] = "# # #";
			texture[5] = " #/#";
			n = 6;
		}
		if (pos == 2)
		{
			texture[0] = "_=#";
			texture[1] = "= =#=";
			texture[2] = "|= = =";
			texture[3] = "#= ==>";
			texture[4] = "= = =";
			texture[5] = " =/=";
			n = 6;
		}
		if (pos == 3)
		{
			texture[0] = "_+=";
			texture[1] = "+ +=+";
			texture[2] = "-+ - +";
			texture[3] = "=+ ++>";
			texture[4] = "+ + +";
			texture[5] = " +/+";
			n = 6;
		}
		if (pos == 4)
		{
			texture[0] = "+ =";
			texture[1] = " - =";
			texture[2] = "-  -";
			texture[3] = "+ -  +";
			texture[4] = " ";
			texture[5] = " -+";
			n = 6;
		}
		if (pos == 5)
		{
			texture[0] = " ";
			texture[1] = "   +";
			texture[2] = " ";
			texture[3] = "+     ";
			texture[4] = " ";
			texture[5] = "  +";
			n = 6;
		}
	}
	if (type == 1)
	{
		if (pos == 0)
		{
			texture[0] = "  _";
			texture[1] = " #.\\";
			texture[2] = "|  .#";
			texture[3] = " \\_/";
			n = 4;
		}
		if (pos == 1)
		{
			texture[0] = " #_";
			texture[1] = "#%#\#";
			texture[2] = "|# #%#";
			texture[3] = " \%/#";
			n = 4;
		}
		if (pos == 2)
		{
			texture[0] = " %=";
			texture[1] = "%=%+%";
			texture[2] = "|% %=%";
			texture[3] = " -=-%";
			n = 4;
		}
		if (pos == 3)
		{
			texture[0] = " =+";
			texture[1] = "=+=-=";
			texture[2] = "-= =+=";
			texture[3] = "  - =";
			n = 4;
		}
		if (pos == 4)
		{
			texture[0] = "+";
			texture[1] = " - +";
			texture[2] = "+ +";
			texture[3] = " +";
			n = 4;
		}
		if (pos == 5)
		{
			texture[0] = " ";
			texture[1] = "   +";
			texture[2] = " ";
			texture[3] = " +";
			n = 4;
		}
	}
	if (type == 2 || type == 3)
	{
		if (pos == 0)
		{
			texture[0] = " ___";
			texture[1] = "/ .#\\";
			texture[2] = "|   .\\";
			texture[3] = " #_ #|";
			texture[4] = "   \\/";
			n = 5;
		}
		if (pos == 1)
		{
			texture[0] = " __#";
			texture[1] = "/ #%#";
			texture[2] = "|# ##\\";
			texture[3] = "#%##%#";
			texture[4] = " # \\#";
			n = 5;
		}
		if (pos == 2)
		{
			texture[0] = " __%";
			texture[1] = "= +=%";
			texture[2] = "|# %+=";
			texture[3] = "%=%+=%";
			texture[4] = " % =%";
			n = 5;
		}
		if (pos == 3)
		{
			texture[0] = "  -=";
			texture[1] = "-  +=";
			texture[2] = "-= +-+";
			texture[3] = "=+= =";
			texture[4] = " = +=";
			n = 5;
		}
		if (pos == 4)
		{
			texture[0] = "  + =";
			texture[1] = "-=";
			texture[2] = "  =";
			texture[3] = " =  -";
			n = 5;
		}
		if (pos == 5)
		{
			texture[0] = "  +";
			texture[1] = " ";
			texture[2] = " ";
			texture[3] = " +";
			n = 5;
		}
	}
	drawTexture(X, Y, n);
}

void logo(int X, int Y)
{
	texture[0] = "   _____                       ___       __                 __                       ";
	texture[1] = "  / ___/____  ____ _________  /   | ____/ /   _____  ____  / /___  __________        ";
	texture[2] = "  \\__ \\/ __ \\/ __ `/ ___/ _ \\/ /| |/ __  / | / / _ \\/ __ \\/ __/ / / / ___/ _ \\";
	texture[3] = " ___/ / /_/ / /_/ / /__/  __/ ___ / /_/ /| |/ /  __/ / / / /_/ /_/ / /  /  __/       ";
	texture[4] = "/____/ .___/\\__,_/\\___/\\___/_/  |_\\__,_/ |___/\\___/_/ /_/\\__/\\__,_/_/   \\___/";
	texture[5] = "    /_/                                                                              ";
	drawTexture(X, Y, 6);
}

